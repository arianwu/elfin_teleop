#!/usr/bin/env python
#

import rospy
from sensor_msgs.msg import JointState

from markers import *
from lab5functions import *

import random


rospy.init_node("testForwardKine")
pub = rospy.Publisher('joint_states', JointState, queue_size=10)
bmarker = BallMarker(color['GREEN'])

# Joint names
jnames = ['elfin_joint1', 'elfin_joint2', 'elfin_joint3',
          'elfin_joint4', 'elfin_joint5', 'elfin_joint6']
# Joint Configuration

q = np.array([random.random(), random.random(), random.random(), random.random(), random.random(), random.random()])

# End effector with respect to the base
T = fkine(q)
print( np.round(T, 3) )
bmarker.position(T)

# Object (message) whose type is JointState
jstate = JointState()
# Set values to the message
jstate.header.stamp = rospy.Time.now()
jstate.name = jnames
# Add the head joint value (with value 0) to the joints
jstate.position = q

# Loop rate (in Hz)
rate = rospy.Rate(100)
# Continuous execution loop
while not rospy.is_shutdown():
    # Current time (needed for ROS)
    jstate.header.stamp = rospy.Time.now()
    # Publish the message
    pub.publish(jstate)
    bmarker.publish()
    # Wait for the next iteration
    rate.sleep()

