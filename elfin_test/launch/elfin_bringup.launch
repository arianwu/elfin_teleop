<launch>
    <!-- <include file="$(find elfin_robot_bringup)/launch/elfin5_bringup.launch"/> -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find elfin_description)/urdf/elfin5.urdf.xacro'" />
  
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <arg name="node_start_delay1" default="1.0" />  
    <node name="listener1" pkg="roscpp_tutorials" type="listener" launch-prefix="bash -c 'sleep $(arg node_start_delay1); $0 $@' " />

    <!-- <include file="$(find elfin_robot_bringup)/launch/elfin_ros_control.launch"/> -->
    <node name="elfin_ros_control" pkg="elfin_ros_control" type="elfin_hardware_interface" output="screen">
        <rosparam file="$(find elfin_robot_bringup)/config/elfin_drivers.yaml" command="load"/>
    </node>

    <rosparam file="$(find elfin_robot_bringup)/config/joint_state_controller.yaml" command="load"/>
    <node name="elfin_joint_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen"/>

    <rosparam file="$(find elfin_robot_bringup)/config/elfin_arm_control.yaml" command="load"/>
    <node name="elfin_arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="load elfin_arm_controller" respawn="false" output="screen"/>

    <arg name="node_start_delay" default="30.0" />  
    <node name="listener" pkg="roscpp_tutorials" type="listener" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' " />

    <include file="$(find elfin_test)/launch/keyboard_moveit.launch"/>
    <include file="$(find elfin_basic_api)/launch/elfin_basic_api.launch"/>
</launch>